generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  clerkId   String   @unique
  email     String   @unique
  firstName String
  lastName  String
  nickName  String?
  admin     Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  participations UserParticipation[]
}

model Season {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  year        Int
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  weeks       Week[]
  games       Game[]
  participations UserParticipation[]
}

model League {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String   @db.Text
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  participations UserParticipation[]
}

model UserParticipation {
  id        Int      @id @default(autoincrement())
  league    League   @relation(fields: [leagueId], references: [id])
  leagueId  Int
  season    Season   @relation(fields: [seasonId], references: [id])
  seasonId  Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  active    Boolean  @default(true)
  balance   Float    @default(1000)
  minBet    Float    @default(0)
  maxBet    Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([leagueId, seasonId, userId])
  @@index([leagueId])
  @@index([seasonId])
  @@index([userId])
}

model Team {
  id          String   @id @default(uuid())
  providerId  String   @unique
  name        String
  conference  String
  mascot      String
  abbreviation String  @unique
  division    String
  logo        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  homeGames   Game[]   @relation("HomeTeam")
  awayGames   Game[]   @relation("AwayTeam")
  resultGames Game[]   @relation("ResultTeam")

  @@index([providerId])
  @@index([name])
  @@index([conference])
  @@index([division])
}

model Week {
  id            Int      @id @default(autoincrement())
  season        Season   @relation(fields: [seasonId], references: [id])
  seasonId      Int
  week          Int
  startDate     DateTime
  endDate       DateTime
  wagersAllowed Boolean  @default(false)
  wagersCutoff  DateTime
  active        Boolean  @default(false)
  activeSync    Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  games         Game[]

  @@index([seasonId])
}

model Game {
  id            Int      @id @default(autoincrement())
  season        Season   @relation(fields: [seasonId], references: [id])
  seasonId      Int
  week          Week     @relation(fields: [weekId], references: [id])
  weekId        Int
  startDate     DateTime
  completed     Boolean  @default(false)
  neutralSite   Boolean  @default(false)
  homeTeam      Team     @relation("HomeTeam", fields: [homeId], references: [id])
  homeId        String
  homePoints    Int?
  spread        Float?
  startingSpread Float?
  awayTeam      Team     @relation("AwayTeam", fields: [awayId], references: [id])
  awayId        String
  awayPoints    Int?
  resultTeam    Team?    @relation("ResultTeam", fields: [resultId], references: [id])
  resultId      String?
  venue         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([seasonId])
  @@index([weekId])
  @@index([homeId])
  @@index([awayId])
  @@index([resultId])
}